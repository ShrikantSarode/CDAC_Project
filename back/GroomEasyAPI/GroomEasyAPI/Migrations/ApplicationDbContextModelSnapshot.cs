// <auto-generated />
using System;
using GroomEasyAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GroomEasyAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AppointmentTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("StaffId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentDate = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AppointmentTime = "10:00 AM",
                            CreatedAt = new DateTime(2025, 2, 14, 8, 47, 2, 960, DateTimeKind.Utc).AddTicks(3233),
                            CustomerId = 101,
                            PaymentStatus = "paid",
                            StaffId = 102,
                            Status = "confirmed"
                        },
                        new
                        {
                            Id = 2,
                            AppointmentDate = new DateTime(2024, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AppointmentTime = "02:30 PM",
                            CreatedAt = new DateTime(2025, 2, 14, 8, 47, 2, 960, DateTimeKind.Utc).AddTicks(3244),
                            CustomerId = 101,
                            PaymentStatus = "pending",
                            StaffId = 103,
                            Status = "pending"
                        });
                });

            modelBuilder.Entity("GroomEasyAPI.Models.AppointmentService", b =>
                {
                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("AppointmentId", "ServiceId");

                    b.HasIndex("ServiceId");

                    b.ToTable("AppointmentServices");
                });

            modelBuilder.Entity("GroomEasyAPI.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("GroomEasyAPI.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "Staff"
                        },
                        new
                        {
                            Id = 3,
                            RoleName = "Customer"
                        });
                });

            modelBuilder.Entity("GroomEasyAPI.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 301,
                            Duration = 30,
                            Name = "Haircut",
                            Price = 500f
                        },
                        new
                        {
                            Id = 302,
                            Duration = 45,
                            Name = "Facial",
                            Price = 700f
                        },
                        new
                        {
                            Id = 303,
                            Duration = 60,
                            Name = "Massage",
                            Price = 1000f
                        });
                });

            modelBuilder.Entity("GroomEasyAPI.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Staff");

                    b.HasData(
                        new
                        {
                            Id = 102,
                            Email = "shrikant@gmail.com",
                            Name = "Shrikant",
                            Phone = "9876543210",
                            UserId = 102
                        },
                        new
                        {
                            Id = 103,
                            Email = "rajesh@gmail.com",
                            Name = "Rajesh",
                            Phone = "8765432109",
                            UserId = 103
                        });
                });

            modelBuilder.Entity("GroomEasyAPI.Models.StaffService", b =>
                {
                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("StaffId", "ServiceId");

                    b.HasIndex("ServiceId");

                    b.ToTable("StaffServices");
                });

            modelBuilder.Entity("GroomEasyAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            Email = "ashok@gmail.com",
                            Mobile = "9123456789",
                            Name = "Ashok",
                            Password = "hashedpassword",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 102,
                            Email = "shrikant@gmail.com",
                            Mobile = "9876543210",
                            Name = "Shrikant",
                            Password = "hashedpassword1",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 103,
                            Email = "rajesh@gmail.com",
                            Mobile = "8765432109",
                            Name = "Rajesh",
                            Password = "hashedpassword2",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Appointment", b =>
                {
                    b.HasOne("GroomEasyAPI.Models.User", "Customer")
                        .WithMany("Appointments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GroomEasyAPI.Models.Service", null)
                        .WithMany("Appointments")
                        .HasForeignKey("ServiceId");

                    b.HasOne("GroomEasyAPI.Models.Staff", "Staff")
                        .WithMany("Appointments")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Customer");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("GroomEasyAPI.Models.AppointmentService", b =>
                {
                    b.HasOne("Appointment", "Appointment")
                        .WithMany("AppointmentServices")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GroomEasyAPI.Models.Service", "Service")
                        .WithMany("AppointmentServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("GroomEasyAPI.Models.Payment", b =>
                {
                    b.HasOne("Appointment", "Appointment")
                        .WithMany()
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GroomEasyAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GroomEasyAPI.Models.Staff", b =>
                {
                    b.HasOne("GroomEasyAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GroomEasyAPI.Models.StaffService", b =>
                {
                    b.HasOne("GroomEasyAPI.Models.Service", "Service")
                        .WithMany("StaffServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GroomEasyAPI.Models.User", "Staff")
                        .WithMany("StaffServices")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("GroomEasyAPI.Models.User", b =>
                {
                    b.HasOne("GroomEasyAPI.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Appointment", b =>
                {
                    b.Navigation("AppointmentServices");
                });

            modelBuilder.Entity("GroomEasyAPI.Models.Service", b =>
                {
                    b.Navigation("AppointmentServices");

                    b.Navigation("Appointments");

                    b.Navigation("StaffServices");
                });

            modelBuilder.Entity("GroomEasyAPI.Models.Staff", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("GroomEasyAPI.Models.User", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("StaffServices");
                });
#pragma warning restore 612, 618
        }
    }
}
